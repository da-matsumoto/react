{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daisu\\\\git-manage\\\\react\\\\customhook\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useCounter = initialCount => {\n  _s();\n\n  const [count, setCount] = useState(initialCount);\n\n  const countAdd = () => setCount(prevCount => prevCount + 1);\n\n  const countSub = () => setCount(prevCount => prevCount - 1);\n\n  const countReset = () => setCount(initialCount);\n\n  return {\n    count,\n    countAdd,\n    countSub,\n    countReset\n  };\n};\n\n_s(useCounter, \"Wx3FONZm5HiCy6oZC/sfWdOGImo=\");\n\nconst CounterText = props => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [\"\\u73FE\\u5728\\u306E\\u30AB\\u30A6\\u30F3\\u30C8\\u6570:\", props.count]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 32\n}, this);\n\n_c = CounterText;\nconst INITIAL_COUNT = 0;\n\nconst Counter = () => {\n  _s2();\n\n  const [count, setCount] = useState(INITIAL_COUNT);\n\n  const countAdd = () => setCount(prevCount => prevCount + 1);\n\n  const countSub = () => setCount(prevCount => prevCount - 1);\n\n  const countReset = () => setCount(INITIAL_COUNT);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counterContainer\",\n    children: [/*#__PURE__*/_jsxDEV(CounterText, {\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countAdd,\n      children: \"\\u30DC\\u30BF\\u30F3+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countSub,\n      children: \"\\u30DC\\u30BF\\u30F3-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countReset,\n      children: \"\\u30EA\\u30BB\\u30C3\\u30C8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Counter, \"01mPRjZ8hXHUM/ffDeV+zu2pzBQ=\");\n\n_c2 = Counter;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n_c3 = App;\n;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CounterText\");\n$RefreshReg$(_c2, \"Counter\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/daisu/git-manage/react/customhook/src/App.js"],"names":["React","useState","useCounter","initialCount","count","setCount","countAdd","prevCount","countSub","countReset","CounterText","props","INITIAL_COUNT","Counter","App"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAIC,YAAD,IAAkB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,YAAD,CAAlC;;AAEA,QAAMG,QAAQ,GAAG,MAAMD,QAAQ,CAAEE,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAA/B;;AACA,QAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAAEE,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAA/B;;AACA,QAAME,UAAU,GAAG,MAAMJ,QAAQ,CAACF,YAAD,CAAjC;;AAEA,SAAO;AAAEC,IAAAA,KAAF;AAASE,IAAAA,QAAT;AAAmBE,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,GAAP;AACD,CARD;;GAAMP,U;;AAUN,MAAMQ,WAAW,GAAIC,KAAD,iBAAW;AAAA,kEAAaA,KAAK,CAACP,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/B;;KAAMM,W;AAEN,MAAME,aAAa,GAAG,CAAtB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACT,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACW,aAAD,CAAlC;;AAEA,QAAMN,QAAQ,GAAG,MAAMD,QAAQ,CAAEE,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAA/B;;AACA,QAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAAEE,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAA/B;;AACA,QAAME,UAAU,GAAG,MAAMJ,QAAQ,CAACO,aAAD,CAAjC;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,KAAK,EAAER;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAfD;;IAAMI,O;;MAAAA,O;AAiBN,eAAe,SAASC,GAAT,GAAe;AAC5B,sBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;MAFuBA,G;AAEvB","sourcesContent":["import React, { useState } from \"react\";\n\nconst useCounter = (initialCount) => {\n  const [count, setCount] = useState(initialCount);\n\n  const countAdd = () => setCount((prevCount) => prevCount + 1);\n  const countSub = () => setCount((prevCount) => prevCount - 1);\n  const countReset = () => setCount(initialCount);\n\n  return { count, countAdd, countSub, countReset};\n}\n\nconst CounterText = (props) => <p>現在のカウント数:{props.count}</p>;\n\nconst INITIAL_COUNT = 0;\n\nconst Counter = () => {\n  const [count, setCount] = useState(INITIAL_COUNT);\n\n  const countAdd = () => setCount((prevCount) => prevCount + 1);\n  const countSub = () => setCount((prevCount) => prevCount - 1);\n  const countReset = () => setCount(INITIAL_COUNT);\n\n  return (\n    <div className=\"counterContainer\">\n      <CounterText count={count} />\n      <button onClick={countAdd}>ボタン+1</button>\n      <button onClick={countSub}>ボタン-1</button>\n      <button onClick={countReset}>リセット</button>\n    </div>\n  );\n}\n\nexport default function App() {\n  return <Counter />;\n};\n"]},"metadata":{},"sourceType":"module"}