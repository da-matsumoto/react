{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daisu\\\\git-manage\\\\react\\\\useref\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SampleComponent = () => {\n  _s();\n\n  // const inputRefObject = useRef(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  useEffect(() => {\n    console.log(\"レンダリング\");\n  });\n\n  const handleClick = () => {\n    // setText(inputRefObject.current.value);\n    setText(inputValue);\n  };\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const textReset = () => {\n    setText(\"\"); // inputRefObject.current.value = \"\";\n\n    setInputValue(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleChange,\n      value: inputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"set text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: textReset,\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"text: \", text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SampleComponent, \"WkAqFV9GxkNHs1s7iEgsdG36Bi8=\");\n\n_c = SampleComponent;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(SampleComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SampleComponent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/daisu/git-manage/react/useref/src/App.js"],"names":["React","useRef","useState","useEffect","SampleComponent","inputValue","setInputValue","text","setText","console","log","handleClick","handleChange","e","target","value","textReset","App"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,GAFQ,CAAT;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxB;AACAH,IAAAA,OAAO,CAACH,UAAD,CAAP;AACD,GAHD;;AAKA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1BP,IAAAA,aAAa,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACtBR,IAAAA,OAAO,CAAC,EAAD,CAAP,CADsB,CAEtB;;AACAF,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEM,YAA7B;AAA2C,MAAA,KAAK,EAAEP;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAQ,MAAA,OAAO,EAAEM,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEK,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAME;AAAA,2BAAUT,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD,CAnCD;;GAAMH,e;;KAAAA,e;AAqCN,eAAe,SAASa,GAAT,GAAe;AAC5B,sBAAO,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;MAFuBA,G","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\n\nconst SampleComponent = () => {\n  // const inputRefObject = useRef(null);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"レンダリング\");\n  });\n\n  const handleClick = () => {\n    // setText(inputRefObject.current.value);\n    setText(inputValue);\n  };\n\n  const handleChange = (e) => {\n    setInputValue(e.target.value);\n  }\n\n  const textReset = () => {\n    setText(\"\");\n    // inputRefObject.current.value = \"\";\n    setInputValue(\"\");\n  };\n\n  return (\n    <>\n      <input type=\"text\" onChange={handleChange} value={inputValue} />\n\n      <button onClick={handleClick}>set text</button>\n      <button onClick={textReset}>reset</button>\n\n      <p>text: {text}</p>\n    </>\n  );\n}\n\nexport default function App() {\n  return <SampleComponent />;\n}"]},"metadata":{},"sourceType":"module"}